name: Python CI/CD

on:
  push:
    branches: # Trigger on pushes to all branches
      - '*'
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12' # Specify your Python version

      - name: Install Dependencies
        run: |
          pip install -r requirements_for_devs/requirements-check-code-format.txt
        #   pip install -r requirements.txt

      - name: Run isort
        run: isort . --check --diff

      - name: Run Black
        run: black . --check

      - name: Run flake8
        run: flake8 .
    continue-on-error: ${{ github.ref != 'refs/heads/main' }} # Ignore errors on non-main branches

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Tests
        run: pytest
    continue-on-error: ${{ github.ref != 'refs/heads/main' }} # Ignore errors on non-main branches

#   deploy:
#     name: Deploy Documentation
#     runs-on: ubuntu-latest
#     needs: test
#     if: github.ref == 'refs/heads/main' # Only run deployment on main branch
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Set Up Python
#         uses: actions/setup-python@v3
#         with:
#           python-version: '3.10'

#       - name: Install Documentation Generator
#         run: |
#           pip install sphinx # Or mkdocs, pdoc, etc., based on your documentation tool
#           pip install -r requirements.txt

#       - name: Build Documentation
#         run: |
#           sphinx-build docs/ docs/_build/html

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: docs/_build/html
